% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gplot.R
\name{gplot}
\alias{gplot}
\title{Plotting method for BQVAR_QIRF}
\arguments{
\item{x}{BQVAR_QIRF object.}

\item{response}{Character vector of names of response variable.}

\item{impulse}{Character vector of names of impulse variable.}

\item{type_irf}{Character that indicates the type of QIRF to be plotted. Four basic types of IRF are \code{"irf"}(QIRF), \code{"irf_counter"}(counterfactual QIRF), \code{"irf_mean"}(mean QIRF) and \code{"irf_mean_counter"}(counterfactual mean QIRF). Two different types of IRF can be drawn in the same plot by separating the names of basic types by \code{" vs "}, such as \code{"irf vs irf_mean"}. If two types of IRF are either \code{"irf"} and \code{"irf_counter"} or \code{"irf_mean"} and \code{"irf_mean_counter"}, then the difference between actual and counterfactual IRF will be plotted too.}

\item{type_int}{Character that indicates the which kind of interval is plotted, which should be one of \code{"none"}(no interval), \code{"confidence"}(bootstrapping confidence interval) and \code{"credibility"}(credibility interval).}

\item{alpha}{Numeric vector of that contains significance levels of confidence or credibility intervals. e.g. \code{alpha = 0.1} means 90\% confidence or credibility interval. The levels that are not estimated in the \code{BQVAR_QIRF} object will be omitted.}

\item{lineWidth_irf}{Integer that indicates line width of IRF.}

\item{color_irf}{Character of the color of IRF line.}

\item{color_ci}{Character vector of the colors of confidence interval bands. The length of the vector should be equal to the number of IRF types multiplied by the number of significance levels. For example, if \code{type_irf = "irf vs irf_counter"} and \code{type_int = c(0.10, 0.32, 0.50)}, then 6 colors should be provided, where the first three colors are for the 90\%, 68\% and 50\% band of QIRF respectively , and the last three colors are for counterfactual IRF.}

\item{labs_irf}{object of \code{labels} class for axis titles of QIRF plot.}

\item{labs_diff}{object of \code{labels} class for axis titles of difference in QIRF plot.}

\item{font_lab}{object of \code{element} class for axis titles.}

\item{font_axis}{object of \code{element} class for axis values.}
}
\value{
ggplot object.
}
\description{
Plotting Quantile Impulse Response Functions (QIRFs) and their confidence intervals.
}
\examples{
# simulate data
library(bayesQVAR)
set.seed(810)
n <- 5
alpha <- rep(0.95, n)
bayesQVAR::simuData(n, alpha, 150)

# set model specification, counterfactual matrices
n_end <- ncol(data_end)
n_exo <- ncol(data_exo)
lag_end <- 1
lag_exo <- 1
n_x <- n_end * lag_end + n_exo * lag_exo + 1
s <- sqrt(2 / alpha / (1 - alpha))
xi <- (1 - 2 * alpha) / alpha / (1 - alpha)
Sigma <- diag(s^2, n_end, n_end)
Sigma_A <- list()
for(i in 1:n_end){
  Sigma_A[[i]] = 100 * diag(n_x)
}
prior <- list(
  mu_A = matrix(0, n_end, n_x),
  Sigma_A = Sigma_A,
  Sigma = diag(n_end),
  nu = 1000 * n_end,
  n_delta = rep(1, n_end),
  s_delta = rep(1, n_end),
  n_lambda = matrix(2, n_end, n_x),
  s_lambda = matrix(0.0001, n_end, n_x)
)
samplerSetting <- list(
  # initial value
  init_A = matrix(0, n_end, n_x),
  init_Sigma = diag(n_end),
  init_delta = rep(0.1, n_end),
  n_sample = 200,
  # burn-in, thinning, step size of delta
  n_burn = 200,
  n_thin = 2
)
modelSpecif_mal <- list(
  data_end = data_end,
  data_exo = data_exo,
  lag = c(lag_end, lag_exo),
  prior = prior,
  samplerSetting = samplerSetting,
  method = "bayes-mal"
)
Ap_counter <- cbind(A_alpha, 0, 0) # the coefficient on exogenous and constant term does not matter
counterfactual_actual <- list(
  A0_counter = diag(n_end),
  Ap_counter = Ap_counter,
  Ap_mean_counter = cbind(A_const, 0, 0)
)
colNames_end <- colnames(data_end)
# estimate QIRFs and confidence, credibility intervals
QIRF_mal <- bayesQVAR::calQIRF(
  modelSpecif = modelSpecif_mal,
  names_impulse = colNames_end,
  names_response = colNames_end,
  horizon = 12,
  probPath = matrix(alpha, nrow = n_end, ncol = 12),
  mean = TRUE,
  counterfactual = counterfactual_actual, # the irf_counter will be the true irf
  confInt = TRUE,
  credInt = TRUE,
  alpha = c(0.10, 0.32, 0.50),
  n_simu = 100
)
# plot QIRFs and compared it to the true irf
bayesQVAR::gplot(
  QIRF_mal,
  response = "V1",
  impulse = "V2",
  type_irf = "irf vs irf_counter",
  type_int = "credibility",
  alpha = 0.32,
  color_irf = c("#1ED760", "#FF6597"),
  color_ci = c("#1ED760",  "#FF6597"),
  fontSize_lab = 15,
  fontSize_axis = 15
)
bayesQVAR::gplot(
  QIRF_mal,
  response = "V1",
  impulse = "V2",
  type_irf = "irf_mean vs irf_mean_counter",
  type_int = "credibility",
  alpha = 0.10,
  color_irf = c("#1ED760", "#FF6597"),
  color_ci = c("#1ED760",  "#FF6597"),
  fontSize_lab = 15,
  fontSize_axis = 15
)
}
